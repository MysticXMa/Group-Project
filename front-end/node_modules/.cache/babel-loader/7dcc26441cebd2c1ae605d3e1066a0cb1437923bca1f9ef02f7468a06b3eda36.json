{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Oppilas1\\\\Desktop\\\\Project\\\\Group-Project\\\\front-end\\\\src\\\\components\\\\joukkueetTable.tsx\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport { useState, useEffect } from \"react\";\nimport { createColumnHelper, flexRender, getCoreRowModel, getSortedRowModel, useReactTable } from \"@tanstack/react-table\";\nimport { fetchJoukkueet, saveJoukkueet } from \"../api/joukkueetApi.ts\";\n\n// Extend TableMeta to include updateData method for handling data updates\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n// Helper to create column definitions for the table\nconst columnHelper = createColumnHelper();\nconst JoukkueetTable = () => {\n  _s();\n  // State management\n  const [data, setData] = useState([]);\n  const [originalData, setOriginalData] = useState([]);\n  const [sorting, setSorting] = useState([]);\n  const [isEditing, setIsEditing] = useState(false);\n  const [isLoading, setIsLoading] = useState(true);\n\n  // Fetch data on component mount\n  useEffect(() => {\n    const loadData = async () => {\n      const fetchedData = await fetchJoukkueet();\n      setData(fetchedData);\n      setOriginalData(fetchedData);\n      setIsLoading(false);\n    };\n    loadData();\n  }, []);\n\n  // Define table columns with custom headers, sortability and editable cells\n  const columns = [columnHelper.accessor(\"ryhmä\", {\n    header: ({\n      column\n    }) => /*#__PURE__*/_jsxDEV(\"div\", {\n      onClick: () => column.toggleSorting(),\n      className: \"column-header\",\n      children: [\"Ryhm\\xE4 \", column.getIsSorted() === \"asc\" ? \"↑\" : column.getIsSorted() === \"desc\" ? \"↓\" : \"\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }, this),\n    cell: ({\n      getValue,\n      row,\n      column,\n      table\n    }) => {\n      const initialValue = getValue();\n      return isEditing ? /*#__PURE__*/_jsxDEV(\"input\", {\n        defaultValue: initialValue,\n        onBlur: e => {\n          table.options.meta.updateData(row.index, column.id, Number(e.target.value));\n        },\n        type: \"number\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 11\n      }, this) : initialValue;\n    }\n  }), columnHelper.accessor(\"koulu\", {\n    header: ({\n      column\n    }) => /*#__PURE__*/_jsxDEV(\"div\", {\n      onClick: () => column.toggleSorting(),\n      className: \"column-header\",\n      children: [\"Koulu \", column.getIsSorted() === \"asc\" ? \"↑\" : column.getIsSorted() === \"desc\" ? \"↓\" : \"\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 9\n    }, this),\n    cell: ({\n      getValue,\n      row,\n      column,\n      table\n    }) => {\n      const initialValue = getValue();\n      return isEditing ? /*#__PURE__*/_jsxDEV(\"input\", {\n        defaultValue: initialValue,\n        onBlur: e => {\n          table.options.meta.updateData(row.index, column.id, e.target.value);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 11\n      }, this) : initialValue;\n    }\n  }), columnHelper.accessor(\"joukkue\", {\n    header: ({\n      column\n    }) => /*#__PURE__*/_jsxDEV(\"div\", {\n      onClick: () => column.toggleSorting(),\n      className: \"column-header\",\n      children: [\"Joukkue \", column.getIsSorted() === \"asc\" ? \"↑\" : column.getIsSorted() === \"desc\" ? \"↓\" : \"\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 9\n    }, this),\n    cell: ({\n      getValue,\n      row,\n      column,\n      table\n    }) => {\n      const initialValue = getValue();\n      return isEditing ? /*#__PURE__*/_jsxDEV(\"input\", {\n        defaultValue: initialValue,\n        onBlur: e => {\n          table.options.meta.updateData(row.index, column.id, e.target.value);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 11\n      }, this) : initialValue;\n    }\n  })];\n\n  // Initialize the table instance using react-table hook\n  const table = useReactTable({\n    data,\n    columns,\n    getCoreRowModel: getCoreRowModel(),\n    getSortedRowModel: getSortedRowModel(),\n    onSortingChange: setSorting,\n    state: {\n      sorting\n    },\n    meta: {\n      updateData: (rowIndex, columnId, value) => {\n        setData(old => old.map((row, index) => {\n          if (index === rowIndex) {\n            return {\n              ...old[rowIndex],\n              [columnId]: value\n            };\n          }\n          return row;\n        }));\n      }\n    }\n  });\n\n  // Add a new row to the table\n  const addRow = () => {\n    const newRow = {\n      ryhmä: 0,\n      koulu: \"\",\n      joukkue: \"\"\n    };\n    setData([...data, newRow]);\n    setIsEditing(true);\n  };\n\n  // Remove a row by index\n  const removeRow = index => {\n    setData(data.filter((_, i) => i !== index));\n  };\n\n  // Toggle edit mode\n  const handleEdit = () => {\n    setIsEditing(true);\n  };\n\n  // Save the data to the API\n  const handleSave = async () => {\n    setIsLoading(true);\n    await saveJoukkueet(data);\n    setOriginalData(data);\n    setIsEditing(false);\n    setIsLoading(false);\n  };\n\n  // Cancel the edit and restore original data\n  const handleCancel = () => {\n    setData(originalData);\n    setIsEditing(false);\n  };\n\n  // Show loading state while fetching data\n  if (isLoading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 12\n    }, this);\n  }\n\n  // Main render for the table UI\n  if (localStorage.getItem(\"admin\") === true) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"joukkueet-table table-wrapper\",\n      children: [/*#__PURE__*/_jsxDEV(\"table\", {\n        className: \"taulukko\",\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: table.getHeaderGroups().map(headerGroup => /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              id: \"number-column\",\n              children: \"#\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 181,\n              columnNumber: 17\n            }, this), headerGroup.headers.map(header => /*#__PURE__*/_jsxDEV(\"th\", {\n              className: header.id,\n              children: flexRender(header.column.columnDef.header, header.getContext())\n            }, header.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 183,\n              columnNumber: 19\n            }, this)), isEditing && /*#__PURE__*/_jsxDEV(\"th\", {\n              id: \"actions-column\",\n              children: \"Actions\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 185,\n              columnNumber: 31\n            }, this)]\n          }, headerGroup.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 180,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 178,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: table.getRowModel().rows.map((row, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: index + 1\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 192,\n              columnNumber: 17\n            }, this), row.getVisibleCells().map(cell => /*#__PURE__*/_jsxDEV(\"td\", {\n              children: flexRender(cell.column.columnDef.cell, cell.getContext())\n            }, cell.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 194,\n              columnNumber: 19\n            }, this)), isEditing && /*#__PURE__*/_jsxDEV(\"td\", {\n              children: /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => removeRow(index),\n                children: \"Remove\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 198,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 197,\n              columnNumber: 19\n            }, this)]\n          }, row.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 191,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 189,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"actions\",\n        children: isEditing ? /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: addRow,\n            children: \"Add Row\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 208,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: handleSave,\n              children: \"Save\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 210,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: handleCancel,\n              className: \"cancel\",\n              children: \"Cancel\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 211,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 209,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true) : /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleEdit,\n          children: \"Edit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 217,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 205,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 7\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"joukkueet-table table-wrapper\",\n      children: /*#__PURE__*/_jsxDEV(\"table\", {\n        className: \"taulukko\",\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: table.getHeaderGroups().map(headerGroup => /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              id: \"number-column\",\n              children: \"#\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 229,\n              columnNumber: 17\n            }, this), headerGroup.headers.map(header => /*#__PURE__*/_jsxDEV(\"th\", {\n              className: header.id,\n              children: flexRender(header.column.columnDef.header, header.getContext())\n            }, header.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 231,\n              columnNumber: 19\n            }, this))]\n          }, headerGroup.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 228,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 226,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: table.getRowModel().rows.map((row, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: index + 1\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 239,\n              columnNumber: 17\n            }, this), row.getVisibleCells().map(cell => /*#__PURE__*/_jsxDEV(\"td\", {\n              children: flexRender(cell.column.columnDef.cell, cell.getContext())\n            }, cell.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 241,\n              columnNumber: 19\n            }, this))]\n          }, row.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 238,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 236,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 225,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 224,\n      columnNumber: 7\n    }, this);\n  }\n};\n_s(JoukkueetTable, \"M2LfSSX/ze6LJ6NdfA3V4rks8co=\", false, function () {\n  return [useReactTable];\n});\n_c = JoukkueetTable;\nexport default JoukkueetTable;\nvar _c;\n$RefreshReg$(_c, \"JoukkueetTable\");","map":{"version":3,"names":["React","useState","useEffect","createColumnHelper","flexRender","getCoreRowModel","getSortedRowModel","useReactTable","fetchJoukkueet","saveJoukkueet","jsxDEV","_jsxDEV","Fragment","_Fragment","columnHelper","JoukkueetTable","_s","data","setData","originalData","setOriginalData","sorting","setSorting","isEditing","setIsEditing","isLoading","setIsLoading","loadData","fetchedData","columns","accessor","header","column","onClick","toggleSorting","className","children","getIsSorted","fileName","_jsxFileName","lineNumber","columnNumber","cell","getValue","row","table","initialValue","defaultValue","onBlur","e","options","meta","updateData","index","id","Number","target","value","type","onSortingChange","state","rowIndex","columnId","old","map","addRow","newRow","ryhmä","koulu","joukkue","removeRow","filter","_","i","handleEdit","handleSave","handleCancel","localStorage","getItem","getHeaderGroups","headerGroup","headers","columnDef","getContext","getRowModel","rows","getVisibleCells","_c","$RefreshReg$"],"sources":["C:/Users/Oppilas1/Desktop/Project/Group-Project/front-end/src/components/joukkueetTable.tsx"],"sourcesContent":["import React from \"react\"\r\nimport { useState, useEffect } from \"react\"\r\nimport {\r\n  createColumnHelper,\r\n  flexRender,\r\n  getCoreRowModel,\r\n  getSortedRowModel,\r\n  TableMeta,\r\n  type SortingState,\r\n  useReactTable,\r\n} from \"@tanstack/react-table\"\r\nimport type { Joukkue } from \"../types/joukkue\"\r\nimport { fetchJoukkueet, saveJoukkueet } from \"../api/joukkueetApi.ts\"\r\n\r\n// Extend TableMeta to include updateData method for handling data updates\r\ninterface ExtendedTableMeta extends TableMeta<Joukkue> {\r\n  updateData: (rowIndex: number, columnId: string, value: unknown) => void;\r\n}\r\n\r\n// Helper to create column definitions for the table\r\nconst columnHelper = createColumnHelper<Joukkue>()\r\n\r\nconst JoukkueetTable = () => {\r\n  // State management\r\n  const [data, setData] = useState([])\r\n  const [originalData, setOriginalData] = useState([])\r\n  const [sorting, setSorting] = useState([])\r\n  const [isEditing, setIsEditing] = useState(false)\r\n  const [isLoading, setIsLoading] = useState(true)\r\n\r\n  // Fetch data on component mount\r\n  useEffect(() => {\r\n    const loadData = async () => {\r\n      const fetchedData = await fetchJoukkueet()\r\n      setData(fetchedData)\r\n      setOriginalData(fetchedData)\r\n      setIsLoading(false)\r\n    }\r\n    loadData()\r\n  }, [])\r\n\r\n  // Define table columns with custom headers, sortability and editable cells\r\n  const columns = [\r\n    columnHelper.accessor(\"ryhmä\", {\r\n      header: ({column}) => (\r\n        <div onClick={() => column.toggleSorting()} className=\"column-header\">\r\n          Ryhmä {column.getIsSorted() === \"asc\" ? \"↑\" : column.getIsSorted() === \"desc\" ? \"↓\" : \"\"}\r\n        </div>\r\n      ),\r\n      cell: ({ getValue, row, column, table }) => {\r\n        const initialValue = getValue()\r\n        return isEditing ? (\r\n          <input\r\n            defaultValue={initialValue}\r\n            onBlur={(e) => {\r\n              (table.options.meta as ExtendedTableMeta).updateData(row.index, column.id, Number(e.target.value))\r\n            }}\r\n            type=\"number\"\r\n          />\r\n        ) : (\r\n          initialValue\r\n        )\r\n      },\r\n    }),\r\n    columnHelper.accessor(\"koulu\", {\r\n      header: ({ column }) => (\r\n        <div onClick={() => column.toggleSorting()} className=\"column-header\">\r\n          Koulu {column.getIsSorted() === \"asc\" ? \"↑\" : column.getIsSorted() === \"desc\" ? \"↓\" : \"\"}\r\n        </div>\r\n      ),\r\n      cell: ({ getValue, row, column, table }) => {\r\n        const initialValue = getValue()\r\n        return isEditing ? (\r\n          <input\r\n            defaultValue={initialValue}\r\n            onBlur={(e) => {\r\n              (table.options.meta as ExtendedTableMeta).updateData(row.index, column.id, e.target.value)\r\n            }}\r\n          />\r\n        ) : (\r\n          initialValue\r\n        )\r\n      },\r\n    }),\r\n    columnHelper.accessor(\"joukkue\", {\r\n      header: ({column}) => (\r\n        <div onClick={() => column.toggleSorting()} className=\"column-header\">\r\n          Joukkue {column.getIsSorted() === \"asc\" ? \"↑\" : column.getIsSorted() === \"desc\" ? \"↓\" : \"\"}\r\n        </div>\r\n      ),\r\n      cell: ({ getValue, row, column, table }) => {\r\n        const initialValue = getValue()\r\n        return isEditing ? (\r\n          <input\r\n            defaultValue={initialValue}\r\n            onBlur={(e) => {\r\n              (table.options.meta as ExtendedTableMeta).updateData(row.index, column.id, e.target.value)\r\n            }}\r\n          />\r\n        ) : (\r\n          initialValue\r\n        )\r\n      },\r\n    }),\r\n  ]\r\n\r\n  // Initialize the table instance using react-table hook\r\n  const table = useReactTable({\r\n    data,\r\n    columns,\r\n    getCoreRowModel: getCoreRowModel(),\r\n    getSortedRowModel: getSortedRowModel(),\r\n    onSortingChange: setSorting, \r\n    state: { sorting }, \r\n    meta: {\r\n      updateData: (rowIndex: number, columnId: string, value: unknown) => {\r\n        setData((old) =>\r\n          old.map((row, index) => {\r\n            if (index === rowIndex) {\r\n              return {\r\n                ...old[rowIndex]!,\r\n                [columnId]: value,\r\n              }\r\n            }\r\n            return row\r\n          }),\r\n        );\r\n      },\r\n    } as ExtendedTableMeta, \r\n  });\r\n\r\n  // Add a new row to the table\r\n  const addRow = () => {\r\n    const newRow: Joukkue = {\r\n      ryhmä: 0,\r\n      koulu: \"\",\r\n      joukkue: \"\",\r\n    }\r\n    setData([...data, newRow]) \r\n    setIsEditing(true) \r\n  }\r\n\r\n  // Remove a row by index\r\n  const removeRow = (index: number) => {\r\n    setData(data.filter((_, i) => i !== index)) \r\n  }\r\n\r\n  // Toggle edit mode\r\n  const handleEdit = () => {\r\n    setIsEditing(true)\r\n  }\r\n\r\n  // Save the data to the API\r\n  const handleSave = async () => {\r\n    setIsLoading(true)\r\n    await saveJoukkueet(data)\r\n    setOriginalData(data) \r\n    setIsEditing(false) \r\n    setIsLoading(false) \r\n  }\r\n\r\n  // Cancel the edit and restore original data\r\n  const handleCancel = () => {\r\n    setData(originalData) \r\n    setIsEditing(false) \r\n  }\r\n\r\n  // Show loading state while fetching data\r\n  if (isLoading) {\r\n    return <div>Loading...</div>\r\n  }\r\n\r\n  // Main render for the table UI\r\n  if (localStorage.getItem(\"admin\")===true) {\r\n    return (\r\n      <div className=\"joukkueet-table table-wrapper\">\r\n        <table className=\"taulukko\">\r\n          <thead>\r\n            {table.getHeaderGroups().map((headerGroup) => (\r\n              <tr key={headerGroup.id}>\r\n                <th id=\"number-column\">#</th>\r\n                {headerGroup.headers.map((header) => (\r\n                  <th key={header.id} className={header.id}>{flexRender(header.column.columnDef.header, header.getContext())}</th>\r\n                ))}\r\n                {isEditing && <th id=\"actions-column\">Actions</th>} \r\n              </tr>\r\n            ))}\r\n          </thead>\r\n          <tbody>\r\n            {table.getRowModel().rows.map((row, index) => (\r\n              <tr key={row.id}>\r\n                <td>{index + 1}</td>\r\n                {row.getVisibleCells().map((cell) => (\r\n                  <td key={cell.id}>{flexRender(cell.column.columnDef.cell, cell.getContext())}</td>\r\n                ))}\r\n                {isEditing && (\r\n                  <td>\r\n                    <button onClick={() => removeRow(index)}>Remove</button>\r\n                  </td>\r\n                )}\r\n              </tr>\r\n            ))}\r\n          </tbody>\r\n        </table>\r\n        <div className=\"actions\">\r\n          {isEditing ? (\r\n            <>\r\n              <button onClick={addRow}>Add Row</button>\r\n              <div>\r\n                <button onClick={handleSave}>Save</button>\r\n                <button onClick={handleCancel} className=\"cancel\">\r\n                  Cancel\r\n                </button>\r\n              </div>\r\n            </>\r\n          ) : (\r\n            <button onClick={handleEdit}>Edit</button>\r\n          )}\r\n        </div>\r\n      </div>\r\n    );\r\n  } else {\r\n    return (\r\n      <div className=\"joukkueet-table table-wrapper\">\r\n        <table className=\"taulukko\">\r\n          <thead>\r\n            {table.getHeaderGroups().map((headerGroup) => (\r\n              <tr key={headerGroup.id}>\r\n                <th id=\"number-column\">#</th>\r\n                {headerGroup.headers.map((header) => (\r\n                  <th key={header.id} className={header.id}>{flexRender(header.column.columnDef.header, header.getContext())}</th>\r\n                ))}\r\n              </tr>\r\n            ))}\r\n          </thead>\r\n          <tbody>\r\n            {table.getRowModel().rows.map((row, index) => (\r\n              <tr key={row.id}>\r\n                <td>{index + 1}</td>\r\n                {row.getVisibleCells().map((cell) => (\r\n                  <td key={cell.id}>{flexRender(cell.column.columnDef.cell, cell.getContext())}</td>\r\n                ))}\r\n              </tr>\r\n            ))}\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default JoukkueetTable\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}