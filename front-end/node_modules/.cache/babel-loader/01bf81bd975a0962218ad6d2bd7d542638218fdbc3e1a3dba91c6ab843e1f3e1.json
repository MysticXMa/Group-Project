{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Oppilas1\\\\Desktop\\\\Project\\\\Group-Project\\\\front-end\\\\src\\\\components\\\\tilastoTable.tsx\",\n  _s = $RefreshSig$();\n// src/components/tilastoTable.tsx\nimport React, { useState, useEffect } from \"react\";\nimport { createColumnHelper, flexRender, getCoreRowModel, getSortedRowModel, useReactTable } from \"@tanstack/react-table\";\nimport { fetchTilasto, saveTilasto } from \"../api/tilastoApi.ts\";\nimport TimeInput from \"./timeInput.tsx\";\n\n// Extend TableMeta so that we can update cell data (only for rasti columns)\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n// Helper to format time (seconds) into MM:SS\nconst timeFormat = time => {\n  const minutes = Math.floor(time / 60);\n  const seconds = time % 60;\n  return `${minutes}:${seconds < 10 ? \"0\" : \"\"}${seconds}`;\n};\n\n// Define the maximum allowed total time in seconds (example: 7 minutes = 420 seconds)\nconst MAX_MINUTES = 7;\nconst MAX_TOTAL_SECONDS = MAX_MINUTES * 60; // 420 seconds\n\n// Create the column helper for our combined type\nconst columnHelper = createColumnHelper();\nconst TilastoTable = () => {\n  _s();\n  const [data, setData] = useState([]);\n  const [originalData, setOriginalData] = useState([]);\n  const [sorting, setSorting] = useState([]);\n  const [isEditing, setIsEditing] = useState(false);\n  const [isLoading, setIsLoading] = useState(true);\n\n  // Fetch the data on component mount\n  useEffect(() => {\n    const loadData = async () => {\n      const fetchedData = await fetchTilasto();\n      setData(fetchedData);\n      setOriginalData(fetchedData);\n      setIsLoading(false);\n    };\n    loadData();\n  }, []);\n\n  // Determine the maximum number of Rasti columns across all rows\n  const rastiCount = data.reduce((max, row) => Math.max(max, row.rastiAjat.length), 0);\n\n  // Define the table columns: first the joukkue columns, then the dynamic rasti columns, then the yhteensä column\n  const columns = [\n  // Joukkue columns (read-only)\n  columnHelper.accessor(\"ryhmä\", {\n    header: ({\n      column\n    }) => /*#__PURE__*/_jsxDEV(\"div\", {\n      onClick: () => column.toggleSorting(),\n      className: \"column-header\",\n      children: [\"Ryhm\\xE4\", \" \", column.getIsSorted() === \"asc\" ? \"↑\" : column.getIsSorted() === \"desc\" ? \"↓\" : \"\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 9\n    }, this),\n    cell: ({\n      getValue\n    }) => getValue()\n  }), columnHelper.accessor(\"koulu\", {\n    header: ({\n      column\n    }) => /*#__PURE__*/_jsxDEV(\"div\", {\n      onClick: () => column.toggleSorting(),\n      className: \"column-header\",\n      children: [\"Koulu\", \" \", column.getIsSorted() === \"asc\" ? \"↑\" : column.getIsSorted() === \"desc\" ? \"↓\" : \"\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 9\n    }, this),\n    cell: ({\n      getValue\n    }) => getValue()\n  }), columnHelper.accessor(\"joukkue\", {\n    header: ({\n      column\n    }) => /*#__PURE__*/_jsxDEV(\"div\", {\n      onClick: () => column.toggleSorting(),\n      className: \"column-header\",\n      children: [\"Joukkue\", \" \", column.getIsSorted() === \"asc\" ? \"↑\" : column.getIsSorted() === \"desc\" ? \"↓\" : \"\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 9\n    }, this),\n    cell: ({\n      getValue\n    }) => getValue()\n  }),\n  // Dynamic Rasti columns (editable in edit mode)\n  ...Array.from({\n    length: rastiCount\n  }, (_, index) => columnHelper.accessor(row => {\n    var _row$rastiAjat$index;\n    return (_row$rastiAjat$index = row.rastiAjat[index]) !== null && _row$rastiAjat$index !== void 0 ? _row$rastiAjat$index : 0;\n  }, {\n    id: `rasti_${index}`,\n    header: ({\n      column\n    }) => /*#__PURE__*/_jsxDEV(\"div\", {\n      onClick: () => column.toggleSorting(),\n      className: \"column-header\",\n      children: [\"Rasti \", index + 1, \" \", column.getIsSorted() === \"asc\" ? \"↑\" : column.getIsSorted() === \"desc\" ? \"↓\" : \"\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 11\n    }, this),\n    cell: ({\n      row,\n      table\n    }) => {\n      const rowData = row.original;\n      const totalSeconds = rowData.rastiAjat[index] !== undefined ? rowData.rastiAjat[index] : 0;\n\n      // When not editing display the formatted time\n      if (!isEditing) {\n        return timeFormat(totalSeconds);\n      }\n      return /*#__PURE__*/_jsxDEV(TimeInput, {\n        value: totalSeconds,\n        onChange: newTotal => {\n          table.options.meta.updateData(row.index, `rasti_${index}`, newTotal);\n        },\n        maxTotalSeconds: MAX_TOTAL_SECONDS // Pass the maximum allowed time\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 13\n      }, this);\n    }\n  })),\n  // Yhteensä column (read-only)\n  columnHelper.accessor(row => row.rastiAjat.reduce((sum, time) => sum + time, 0), {\n    id: 'yhteensa',\n    header: ({\n      column\n    }) => /*#__PURE__*/_jsxDEV(\"div\", {\n      onClick: () => column.toggleSorting(),\n      className: \"column-header\",\n      children: [\"Yhteens\\xE4\", \" \", column.getIsSorted() === \"asc\" ? \"↑\" : column.getIsSorted() === \"desc\" ? \"↓\" : \"\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 9\n    }, this),\n    cell: ({\n      getValue\n    }) => timeFormat(getValue())\n  })];\n\n  // Create the table instance\n  const table = useReactTable({\n    data,\n    columns,\n    getCoreRowModel: getCoreRowModel(),\n    getSortedRowModel: getSortedRowModel(),\n    onSortingChange: setSorting,\n    state: {\n      sorting\n    },\n    meta: {\n      updateData: (rowIndex, columnId, value) => {\n        setData(oldData => oldData.map((row, idx) => {\n          if (idx === rowIndex) {\n            const rastiIndex = Number(columnId.replace(\"rasti_\", \"\"));\n            const newRastiAjat = [...row.rastiAjat];\n            newRastiAjat[rastiIndex] = value;\n            return {\n              ...row,\n              rastiAjat: newRastiAjat\n            };\n          }\n          return row;\n        }));\n      }\n    }\n  });\n\n  // Editing controls\n  const handleEdit = () => setIsEditing(true);\n  const handleSave = async () => {\n    setIsLoading(true);\n    await saveTilasto(data);\n    setOriginalData(data);\n    setIsEditing(false);\n    setIsLoading(false);\n  };\n  const handleCancel = () => {\n    setData(originalData);\n    setIsEditing(false);\n  };\n  if (isLoading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 12\n    }, this);\n  }\n  if (localStorage.getItem(\"admin\") === true) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"taulukko-table table-wrapper\",\n      children: [/*#__PURE__*/_jsxDEV(\"table\", {\n        className: \"taulukko\",\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: table.getHeaderGroups().map(headerGroup => /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              id: \"number-column\",\n              children: \"#\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 190,\n              columnNumber: 17\n            }, this), headerGroup.headers.map(header => /*#__PURE__*/_jsxDEV(\"th\", {\n              className: header.id,\n              children: flexRender(header.column.columnDef.header, header.getContext())\n            }, header.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 192,\n              columnNumber: 19\n            }, this))]\n          }, headerGroup.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 189,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 187,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: table.getRowModel().rows.map((row, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: index + 1\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 202,\n              columnNumber: 17\n            }, this), row.getVisibleCells().map(cell => /*#__PURE__*/_jsxDEV(\"td\", {\n              children: flexRender(cell.column.columnDef.cell, cell.getContext())\n            }, cell.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 204,\n              columnNumber: 19\n            }, this))]\n          }, row.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 201,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 199,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"actions\",\n        children: isEditing ? /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleSave,\n            children: \"Save\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 215,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleCancel,\n            className: \"cancel\",\n            children: \"Cancel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 216,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true) : /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleEdit,\n          children: \"Edit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 221,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 212,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 7\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"taulukko-table table-wrapper\",\n      children: /*#__PURE__*/_jsxDEV(\"table\", {\n        className: \"taulukko\",\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: table.getHeaderGroups().map(headerGroup => /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              id: \"number-column\",\n              children: \"#\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 233,\n              columnNumber: 17\n            }, this), headerGroup.headers.map(header => /*#__PURE__*/_jsxDEV(\"th\", {\n              className: header.id,\n              children: flexRender(header.column.columnDef.header, header.getContext())\n            }, header.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 235,\n              columnNumber: 19\n            }, this))]\n          }, headerGroup.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 232,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 230,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: table.getRowModel().rows.map((row, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: index + 1\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 245,\n              columnNumber: 17\n            }, this), row.getVisibleCells().map(cell => /*#__PURE__*/_jsxDEV(\"td\", {\n              children: flexRender(cell.column.columnDef.cell, cell.getContext())\n            }, cell.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 247,\n              columnNumber: 19\n            }, this))]\n          }, row.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 244,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 242,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 229,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 228,\n      columnNumber: 7\n    }, this);\n  }\n};\n_s(TilastoTable, \"M2LfSSX/ze6LJ6NdfA3V4rks8co=\", false, function () {\n  return [useReactTable];\n});\n_c = TilastoTable;\nexport default TilastoTable;\nvar _c;\n$RefreshReg$(_c, \"TilastoTable\");","map":{"version":3,"names":["React","useState","useEffect","createColumnHelper","flexRender","getCoreRowModel","getSortedRowModel","useReactTable","fetchTilasto","saveTilasto","TimeInput","jsxDEV","_jsxDEV","Fragment","_Fragment","timeFormat","time","minutes","Math","floor","seconds","MAX_MINUTES","MAX_TOTAL_SECONDS","columnHelper","TilastoTable","_s","data","setData","originalData","setOriginalData","sorting","setSorting","isEditing","setIsEditing","isLoading","setIsLoading","loadData","fetchedData","rastiCount","reduce","max","row","rastiAjat","length","columns","accessor","header","column","onClick","toggleSorting","className","children","getIsSorted","fileName","_jsxFileName","lineNumber","columnNumber","cell","getValue","Array","from","_","index","_row$rastiAjat$index","id","table","rowData","original","totalSeconds","undefined","value","onChange","newTotal","options","meta","updateData","maxTotalSeconds","sum","onSortingChange","state","rowIndex","columnId","oldData","map","idx","rastiIndex","Number","replace","newRastiAjat","handleEdit","handleSave","handleCancel","localStorage","getItem","getHeaderGroups","headerGroup","headers","columnDef","getContext","getRowModel","rows","getVisibleCells","_c","$RefreshReg$"],"sources":["C:/Users/Oppilas1/Desktop/Project/Group-Project/front-end/src/components/tilastoTable.tsx"],"sourcesContent":["// src/components/tilastoTable.tsx\r\nimport React, { useState, useEffect } from \"react\";\r\nimport {\r\n  createColumnHelper,\r\n  flexRender,\r\n  getCoreRowModel,\r\n  getSortedRowModel,\r\n  TableMeta,\r\n  type SortingState,\r\n  useReactTable,\r\n} from \"@tanstack/react-table\";\r\nimport type { Tilasto } from \"../types/tilasto\";\r\nimport { fetchTilasto, saveTilasto } from \"../api/tilastoApi.ts\";\r\nimport TimeInput from \"./timeInput.tsx\";\r\n\r\n// Extend TableMeta so that we can update cell data (only for rasti columns)\r\ninterface ExtendedTableMeta extends TableMeta<Tilasto> {\r\n  updateData: (rowIndex: number, columnId: string, value: unknown) => void;\r\n}\r\n\r\n// Helper to format time (seconds) into MM:SS\r\nconst timeFormat = (time: number) => {\r\n  const minutes = Math.floor(time / 60);\r\n  const seconds = time % 60;\r\n  return `${minutes}:${seconds < 10 ? \"0\" : \"\"}${seconds}`;\r\n};\r\n\r\n// Define the maximum allowed total time in seconds (example: 7 minutes = 420 seconds)\r\nconst MAX_MINUTES = 7;\r\nconst MAX_TOTAL_SECONDS = MAX_MINUTES * 60; // 420 seconds\r\n\r\n// Create the column helper for our combined type\r\nconst columnHelper = createColumnHelper<Tilasto>();\r\n\r\nconst TilastoTable = () => {\r\n  const [data, setData] = useState<Tilasto[]>([]);\r\n  const [originalData, setOriginalData] = useState<Tilasto[]>([]);\r\n  const [sorting, setSorting] = useState<SortingState>([]);\r\n  const [isEditing, setIsEditing] = useState(false);\r\n  const [isLoading, setIsLoading] = useState(true);\r\n\r\n  // Fetch the data on component mount\r\n  useEffect(() => {\r\n    const loadData = async () => {\r\n      const fetchedData = await fetchTilasto();\r\n      setData(fetchedData);\r\n      setOriginalData(fetchedData);\r\n      setIsLoading(false);\r\n    };\r\n    loadData();\r\n  }, []);\r\n\r\n  // Determine the maximum number of Rasti columns across all rows\r\n  const rastiCount = data.reduce(\r\n    (max, row) => Math.max(max, row.rastiAjat.length),\r\n    0\r\n  );\r\n\r\n  // Define the table columns: first the joukkue columns, then the dynamic rasti columns, then the yhteensä column\r\n  const columns = [\r\n    // Joukkue columns (read-only)\r\n    columnHelper.accessor(\"ryhmä\", {\r\n      header: ({ column }) => (\r\n        <div onClick={() => column.toggleSorting()} className=\"column-header\">\r\n          Ryhmä{\" \"}\r\n          {column.getIsSorted() === \"asc\" ? \"↑\" : column.getIsSorted() === \"desc\" ? \"↓\" : \"\"}\r\n        </div>\r\n      ),\r\n      cell: ({ getValue }) => getValue(),\r\n    }),\r\n    columnHelper.accessor(\"koulu\", {\r\n      header: ({ column }) => (\r\n        <div onClick={() => column.toggleSorting()} className=\"column-header\">\r\n          Koulu{\" \"}\r\n          {column.getIsSorted() === \"asc\" ? \"↑\" : column.getIsSorted() === \"desc\" ? \"↓\" : \"\"}\r\n        </div>\r\n      ),\r\n      cell: ({ getValue }) => getValue(),\r\n    }),\r\n    columnHelper.accessor(\"joukkue\", {\r\n      header: ({ column }) => (\r\n        <div onClick={() => column.toggleSorting()} className=\"column-header\">\r\n          Joukkue{\" \"}\r\n          {column.getIsSorted() === \"asc\" ? \"↑\" : column.getIsSorted() === \"desc\" ? \"↓\" : \"\"}\r\n        </div>\r\n      ),\r\n      cell: ({ getValue }) => getValue(),\r\n    }),\r\n    // Dynamic Rasti columns (editable in edit mode)\r\n    ...Array.from({ length: rastiCount }, (_, index) =>\r\n      columnHelper.accessor((row) => row.rastiAjat[index] ?? 0, {\r\n        id: `rasti_${index}`,\r\n        header: ({ column }) => (\r\n          <div onClick={() => column.toggleSorting()} className=\"column-header\">\r\n            Rasti {index + 1}{\" \"}\r\n            {column.getIsSorted() === \"asc\" ? \"↑\" : column.getIsSorted() === \"desc\" ? \"↓\" : \"\"}\r\n          </div>\r\n        ),\r\n        cell: ({ row, table }) => {\r\n          const rowData = row.original;\r\n          const totalSeconds =\r\n            rowData.rastiAjat[index] !== undefined ? rowData.rastiAjat[index] : 0;\r\n          \r\n          // When not editing display the formatted time\r\n          if (!isEditing) {\r\n            return timeFormat(totalSeconds);\r\n          }\r\n    \r\n          return (\r\n            <TimeInput\r\n              value={totalSeconds}\r\n              onChange={(newTotal) => {\r\n                (table.options.meta as ExtendedTableMeta).updateData(\r\n                  row.index,\r\n                  `rasti_${index}`,\r\n                  newTotal\r\n                );\r\n              }}\r\n              maxTotalSeconds={MAX_TOTAL_SECONDS} // Pass the maximum allowed time\r\n            />\r\n          );\r\n        },\r\n      })\r\n    ),\r\n    // Yhteensä column (read-only)\r\n    columnHelper.accessor(row => row.rastiAjat.reduce((sum, time) => sum + time, 0), {\r\n      id: 'yhteensa',\r\n      header: ({ column }) => (\r\n        <div onClick={() => column.toggleSorting()} className=\"column-header\">\r\n          Yhteensä{\" \"}\r\n          {column.getIsSorted() === \"asc\" ? \"↑\" : column.getIsSorted() === \"desc\" ? \"↓\" : \"\"}\r\n        </div>\r\n      ),\r\n      cell: ({ getValue }) => timeFormat(getValue()),\r\n    }),\r\n  ];\r\n\r\n  // Create the table instance\r\n  const table = useReactTable({\r\n    data,\r\n    columns,\r\n    getCoreRowModel: getCoreRowModel(),\r\n    getSortedRowModel: getSortedRowModel(),\r\n    onSortingChange: setSorting,\r\n    state: { sorting },\r\n    meta: {\r\n      updateData: (rowIndex: number, columnId: string, value: unknown) => {\r\n        setData((oldData) =>\r\n          oldData.map((row, idx) => {\r\n            if (idx === rowIndex) {\r\n              const rastiIndex = Number(columnId.replace(\"rasti_\", \"\"));\r\n              const newRastiAjat = [...row.rastiAjat];\r\n              newRastiAjat[rastiIndex] = value as number;\r\n              return { ...row, rastiAjat: newRastiAjat };\r\n            }\r\n            return row;\r\n          })\r\n        );\r\n      },\r\n    } as ExtendedTableMeta,\r\n  });\r\n\r\n  // Editing controls\r\n  const handleEdit = () => setIsEditing(true);\r\n\r\n  const handleSave = async () => {\r\n    setIsLoading(true);\r\n    await saveTilasto(data);\r\n    setOriginalData(data);\r\n    setIsEditing(false);\r\n    setIsLoading(false);\r\n  };\r\n\r\n  const handleCancel = () => {\r\n    setData(originalData);\r\n    setIsEditing(false);\r\n  };\r\n\r\n  if (isLoading) {\r\n    return <div>Loading...</div>;\r\n  }\r\n\r\n  if (localStorage.getItem(\"admin\")===true) {\r\n    return (\r\n      <div className=\"taulukko-table table-wrapper\">\r\n        <table className=\"taulukko\">\r\n          <thead>\r\n            {table.getHeaderGroups().map((headerGroup) => (\r\n              <tr key={headerGroup.id}>\r\n                <th id=\"number-column\">#</th>\r\n                {headerGroup.headers.map((header) => (\r\n                  <th key={header.id} className={header.id}>\r\n                    {flexRender(header.column.columnDef.header, header.getContext())}\r\n                  </th>\r\n                ))}\r\n              </tr>\r\n            ))}\r\n          </thead>\r\n          <tbody>\r\n            {table.getRowModel().rows.map((row, index) => (\r\n              <tr key={row.id}>\r\n                <td>{index + 1}</td>\r\n                {row.getVisibleCells().map((cell) => (\r\n                  <td key={cell.id}>\r\n                    {flexRender(cell.column.columnDef.cell, cell.getContext())}\r\n                  </td>\r\n                ))}\r\n              </tr>\r\n            ))}\r\n          </tbody>\r\n        </table>\r\n        <div className=\"actions\">\r\n          {isEditing ? (\r\n            <>\r\n              <button onClick={handleSave}>Save</button>\r\n              <button onClick={handleCancel} className=\"cancel\">\r\n                Cancel\r\n              </button>\r\n            </>\r\n          ) : (\r\n            <button onClick={handleEdit}>Edit</button>\r\n          )}\r\n        </div>\r\n      </div>\r\n    );\r\n  } else {\r\n    return (\r\n      <div className=\"taulukko-table table-wrapper\">\r\n        <table className=\"taulukko\">\r\n          <thead>\r\n            {table.getHeaderGroups().map((headerGroup) => (\r\n              <tr key={headerGroup.id}>\r\n                <th id=\"number-column\">#</th>\r\n                {headerGroup.headers.map((header) => (\r\n                  <th key={header.id} className={header.id}>\r\n                    {flexRender(header.column.columnDef.header, header.getContext())}\r\n                  </th>\r\n                ))}\r\n              </tr>\r\n            ))}\r\n          </thead>\r\n          <tbody>\r\n            {table.getRowModel().rows.map((row, index) => (\r\n              <tr key={row.id}>\r\n                <td>{index + 1}</td>\r\n                {row.getVisibleCells().map((cell) => (\r\n                  <td key={cell.id}>\r\n                    {flexRender(cell.column.columnDef.cell, cell.getContext())}\r\n                  </td>\r\n                ))}\r\n              </tr>\r\n            ))}\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n    );\r\n  }\r\n};\r\n\r\nexport default TilastoTable;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}